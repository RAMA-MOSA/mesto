(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){var r=e.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=r,this._formSelector=document.querySelector(n)}var n,r;return n=t,(r=[{key:"rendererItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";"append"===t?this._formSelector.append(e):this._formSelector.prepend(e)}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n,r,o){var i=o.handleCardClick,a=o.handleCardDelete,u=o.addLike,s=o.deleteLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=t,this._cardSelector=n,this._id=r,this._handleCardClick=i,this._handleCardDelete=a,this._addLike=u,this._deleteLike=s}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"deleteCard",value:function(){this._deleteElement(this._element)}},{key:"_deleteElement",value:function(e){e.remove(),e=null}},{key:"_likeElement",value:function(e){this._addLikeClass(),this._addLike(e)}},{key:"_dislike",value:function(e){this._removeLikeClass(),this._deleteLike(e)}},{key:"_addLikeClass",value:function(){this._likeButton.classList.add("element__like_on")}},{key:"_removeLikeClass",value:function(){this._likeButton.classList.remove("element__like_on")}},{key:"setLikeCount",value:function(e){this._likeCount.textContent=String(e.likes.length)}},{key:"_checkCard",value:function(){this._data.owner._id!==this._id&&this._deleteElement(this._deleteButton)}},{key:"_checkLike",value:function(){var e=this;this._data.likes.forEach((function(t){t._id===e._id&&e._addLikeClass()}))}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._likeButton.classList.contains("element__like_on")?e._dislike(e._data):e._likeElement(e._data)})),this._deleteButton.addEventListener("click",this._handleCardDelete),this._cardValue.addEventListener("click",(function(){e._handleCardClick(e._data)}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardValue=this._element.querySelector(".element__photo"),this._cardCaption=this._element.querySelector(".element__caption"),this._likeButton=this._element.querySelector(".element__like"),this._likeCount=this._element.querySelector(".element__count"),this._deleteButton=this._element.querySelector(".element__trash"),this._element.setAttribute("id","".concat(this._data._id)),this._cardCaption.textContent=this._data.name,this._cardValue.src=this._data.link,this._cardValue.alt=this._data.name,this.setLikeCount(this._data),this._setEventListeners(),this._checkCard(),this._checkLike(),this._element}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=n,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector))}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){if(e.validity.valid)this._hideInputError(e);else{var t=e.validationMessage;this._showInputError(e,t)}}},{key:"_hasNotValidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_disabledButton",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)}},{key:"_toggleButtonState",value:function(){this._hasNotValidInput()?this._disabledButton():(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled",!0))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){var e=this;this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._disabledButton()})),this._setEventListeners()}}])&&o(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=t,this._popupElement=document.querySelector(this._popupSelector),this._handleEscClose=this._handleEscClose.bind(this),this._handleClickClose=this._handleClickClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleClickClose",value:function(e){(e.target.classList.contains("popup__close")||e.target.classList.contains("popup"))&&this.close()}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){this._popupElement.addEventListener("click",this._handleClickClose)}},{key:"_removeEventListener",value:function(){this._popupElement.removeEventListener("click",this._handleClickClose),document.removeEventListener("keydown",this._handleEscClose)}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),this._removeEventListener()}}])&&a(t.prototype,n),e}();function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t,n){return(c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(e,t){return!t||"object"!==s(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e)).image=t._popupElement.querySelector(".popup__img"),t.caption=t._popupElement.querySelector(".popup__caption"),t}return t=a,(n=[{key:"open",value:function(e){this.image.src=e.link,this.image.alt=e.name,this.caption.textContent=e.name,c(h(a.prototype),"open",this).call(this)}}])&&l(t.prototype,n),a}(u);function _(e){return(_="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t,n){return(v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function b(e,t){return!t||"object"!==_(t)&&"function"!=typeof t?k(e):t}function k(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function E(e){return(E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e,t){var n,r=t.submit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._popupForm=n._popupElement.querySelector(".popup__form"),n._submit=r,n._submitButton=n._popupForm.querySelector(".popup__save-button"),n._initialValueSubmitButton=n._submitButton.textContent,n._submitEvtHandler=n._submitEvtHandler.bind(k(n)),n}return t=a,(n=[{key:"renderLoading",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Cохранение...";this._submitButton.textContent=e?t:this._initialValueSubmitButton}},{key:"_submitEvtHandler",value:function(e){e.preventDefault(),this._submit(this._getInputValues())}},{key:"_getInputValues",value:function(){var e=Array.from(this._popupForm.querySelectorAll(".popup__item")),t={};return e.forEach((function(e){t[e.name]=e.value})),t}},{key:"setEventListeners",value:function(){this._popupForm.addEventListener("submit",this._submitEvtHandler),v(E(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){this._popupForm.reset(),this._popupForm.removeEventListener("submit",this._submitEvtHandler),v(E(a.prototype),"close",this).call(this)}}])&&y(t.prototype,n),a}(u);function C(e){return(C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(e,t,n){return(L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function w(e,t){return(w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function O(e,t){return!t||"object"!==C(t)&&"function"!=typeof t?j(e):t}function j(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function P(e){return(P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function a(e,t){var n,r=t.submit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._popupElement=document.querySelector(n._popupSelector),n._popupForm=n._popupElement.querySelector(".popup__form"),n._submit=r,n._submitEvtHandler=n._submitEvtHandler.bind(j(n)),n}return t=a,(n=[{key:"_submitEvtHandler",value:function(e){e.preventDefault(),this._submit(this._data),this._popupForm.removeEventListener("submit",this._submitEvtHandler)}},{key:"setEventListeners",value:function(){this._popupForm.addEventListener("submit",this._submitEvtHandler),L(P(a.prototype),"setEventListeners",this).call(this)}},{key:"open",value:function(e){this._data=e,L(P(a.prototype),"open",this).call(this)}}])&&S(t.prototype,n),a}(u);function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var I=function(){function e(t){var n=t.nameSelector,r=t.infoSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._info=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._info.textContent}}},{key:"setUserAvatar",value:function(e){this._avatar.src=e.avatar}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._info.textContent=e.about,this.setUserAvatar(e),this._avatar.alt=e.name}}])&&q(t.prototype,n),e}();function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._headers=t.headers,this._url=t.baseUrl}var t,n;return t=e,(n=[{key:"getInitialData",value:function(){return Promise.all([this.getUserInfo(),this.getCards()])}},{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка:".concat(e.status))}},{key:"setUserAvatar",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._handleResponse)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e._id),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e._id),{method:"PUT",headers:this._headers}).then(this._handleResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e._id),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}},{key:"postCard",value:function(e){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._handleResponse)}},{key:"setUserInfo",value:function(e){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._handleResponse)}},{key:"getCards",value:function(){return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this._headers}).then(this._handleResponse)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{method:"GET",headers:this._headers}).then(this._handleResponse)}}])&&B(t.prototype,n),e}(),A=document.querySelector(".profile__edit"),D=document.querySelector(".profile__button"),x=document.querySelector(".profile__img-avatar"),U=document.querySelector(".popup-profile"),V=Array.from(document.querySelectorAll(".popup__form")),H=U.querySelector("#name-input"),F=U.querySelector("#description-input"),N={formSelector:".popup__form",inputSelector:".popup__item",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__item_error-line",errorClass:"popup__error_visible"};function J(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var G=null,M=null,z=new I({nameSelector:".profile__name",infoSelector:".profile__description",avatarSelector:".profile__avatar"}),$=new t({renderer:function(e){var t=X(e),n=t.generateCard();t.setLikeCount(e),$.addItem(n,"append")}},".elements__box"),K=new d(".popup-image"),Q=new T({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-17",headers:{authorization:"d558607e-48f8-4a90-b7e5-75f1fe753f5b","Content-Type":"application/json"}});Q.getInitialData().then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var a,u=e[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return J(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?J(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];G=o._id,z.setUserInfo(o),$.rendererItems(i)})).catch((function(e){console.log(e)}));var W=new R(".popup-delete",{submit:function(e){Q.deleteCard(e).then((function(){M.deleteCard()})).then((function(){M=null,W.close()})).catch((function(e){console.log(e)}))}}),X=function(e){var t=new r(e,"#element",G,{handleCardClick:function(e){K.open(e),K.setEventListeners()},handleCardDelete:function(){M=t,W.open(e),W.setEventListeners()},addLike:function(e){Q.addLike(e).then((function(e){t.setLikeCount(e)})).catch((function(e){console.log(e)}))},deleteLike:function(e){Q.deleteLike(e).then((function(e){t.setLikeCount(e)})).catch((function(e){console.log(e)}))}});return t},Y=new g(".popup-newcard",{submit:function(e){Y.renderLoading(!0),Q.postCard(e).then((function(e){var t=X(e).generateCard();$.addItem(t,"prepend"),Y.close()})).catch((function(e){console.log(e)})).finally((function(){Y.renderLoading(!1)}))}}),Z=new g(".popup-profile",{submit:function(e){Z.renderLoading(!0),Q.setUserInfo(e).then((function(e){z.setUserInfo(e),Z.close()})).catch((function(e){console.log(e)})).finally((function(){Z.renderLoading(!1)}))}}),ee=new g(".popup-avatar",{submit:function(e){ee.renderLoading(!0),Q.setUserAvatar(e).then((function(e){z.setUserAvatar(e),ee.close()})).catch((function(e){console.log(e)})).finally((function(){ee.renderLoading(!1)}))}});D.addEventListener("click",(function(){Y.open(),Y.setEventListeners()})),A.addEventListener("click",(function(){var e=z.getUserInfo();H.value=e.name,F.value=e.about,Z.open(),Z.setEventListeners()})),x.addEventListener("click",(function(){ee.open(),ee.setEventListeners()})),V.forEach((function(e){!function(e){new i(N,e).enableValidation()}(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,